CREATE PROCEDURE `l1`()
BEGIN
             SELECT n.id, n.code, n.name FROM n_country n;

END;

CREATE PROCEDURE `ls_procedere_update_row_country`(in_pcode VARCHAR(11), in_name VARCHAR(30),in_id INT(11))
BEGIN
    UPDATE n_country SET n_contry.code = in_code, n_country.name = in_name  WHERE id = in_id;

END;

CREATE PROCEDURE `ls_procedure_delete_rec_nm`(d INT)
BEGIN
   DELETE FROM n_ns WHERE id = d;

END;

CREATE PROCEDURE `ls_procedure_insert_new_nm`(in_pcode VARCHAR(11), in_name VARCHAR(30), in_oblast INT(6))
BEGIN
   INSERT INTO n_nm (postcode, name, id_oblast) VALUES(in_code,in_name,in_oblast);

END;

CREATE PROCEDURE `ls_procedure_search_country`(in_code VARCHAR(10), in_name VARCHAR(70))
BEGIN
      SELECT n.id, n.code, n.name FROM n_country n WHERE n.code LIKE CONCAT('%', in_code,'%') AND n.name LIKE CONCAT('%', in_name,'%');

END;

CREATE PROCEDURE `ls_procedure_select_area_short`()
BEGIN
   SELECT n.name FROM n_oblast n ORDER BY n.id;

END;

CREATE PROCEDURE `ls_procedure_select_country`()
BEGIN
  SELECT n.id, n.code, n.name FROM n_country n;

END;

CREATE PROCEDURE `ls_procedure_select_nm`()
BEGIN
  SELECT n.id, n.postcode, n.name, n.id_oblast, n_oblast.name FROM n_nm n LEFT JOIN n_oblast ON(n_oblast.id = n.id_oblast);


END;

CREATE PROCEDURE `ls_procedure_select_row_nm`(row_index INT)
BEGIN
      SELECT n.id, n.postcode, n.name, n.id_oblast FROM n_nm n WHERE n.id = row_index;

END;

CREATE PROCEDURE `ls_procedure_update_nm`(in_pcode VARCHAR(11), in_name VARCHAR(30), in_oblast INT(6), in_id INT(11))
BEGIN
  UPDATE n_nm SET postcode = in_code, name = in_name, id_oblast = in_oblast WHERE id = in_id;

END;

